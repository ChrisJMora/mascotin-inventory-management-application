<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.mascotin</groupId>
	<artifactId>inventorymanagementapplication</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Aplicación de Gestión de Inventario</name>
	<description>
		Herramienta desarrollada para el control eficiente del inventario en una tienda de mascotas. La aplicación ofrece las siguientes funcionalidades clave:
		• Administración de Productos: Permite crear, actualizar, consultar y eliminar productos del catálogo, organizados en tres categorías principales: Alimentos, Accesorios e Insumos Veterinarios. Cada producto incluye información detallada como especificaciones técnicas, datos comerciales y segmentación por tipo de mascota.
		• Planificación Inteligente de Reposición: Genera planes automáticos de reposición a partir del análisis de demanda histórica, niveles de inventario actuales y presupuestos definidos. El sistema detecta productos críticos, calcula cantidades óptimas de reposición y emite alertas por exceso o escasez de stock.
		• Análisis y Reportes: Proporciona herramientas de filtrado, ordenamiento y análisis para apoyar la toma de decisiones, facilitando la identificación de patrones de consumo y evaluaciones de desempeño comercial.
	</description>
	<url>https://github.com/ChrisJMora/mascotin-inventory-management-application.git</url>

	<properties>
		<openxava.version>7.5.2</openxava.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- OpenXava applications work nicely with Java 1.8, 11, 17 and 21 -->
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>

		<!-- Versiones de dependencias -->
		<junit.version>5.9.2</junit.version>

		<!-- Versiones de plugins -->
		<checkstyle.version>3.3.1</checkstyle.version>
		<jacoco.version>0.8.11</jacoco.version>
		<pmd.version>3.21.0</pmd.version>
		<maven.site.plugin.version>3.12.1</maven.site.plugin.version>
		<maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
		<maven.surefire.plugin.version>3.2.1</maven.surefire.plugin.version>
		<maven.surefire.report.plugin.version>3.2.1</maven.surefire.report.plugin.version>
		<maven.enforcer.plugin.version>3.3.0</maven.enforcer.plugin.version>
		<maven.javadoc.plugin.version>3.5.0</maven.javadoc.plugin.version>
		<maven.source.plugin.version>3.2.1</maven.source.plugin.version>
	</properties>

	<!-- ===== GESTIÓN DE DEPENDENCIAS ===== -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.openxava</groupId>
			<artifactId>openxava</artifactId>
			<version>${openxava.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.10.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.10.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.12.0</version>
			<scope>test</scope>
		</dependency>
		<!--
		To access to your database uncomment the corresponding entry 
		from the below dependencies. If you don't find yours, look in
		internet for the maven depencency for your database and add it 
		here yourself.
		-->
		
		<!-- MySQL 
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>		
    		<version>9.3.0</version>
		</dependency>
		-->
		
		<!-- PostgreSQL 
		<dependency>
			<groupId>org.postgresql</groupId>
    		<artifactId>postgresql</artifactId>
    		<version>42.7.5</version>
		</dependency>
		-->
		
		<!-- Oracle 
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<version>23.8.0.25.04</version>
		</dependency>
		-->
		
		<!-- AS/400 
		<dependency>
			<groupId>net.sf.jt400</groupId>
			<artifactId>jt400</artifactId>
			<version>21.0.3</version>
		</dependency>
		-->
		
		<!-- Microsoft SQL Server
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
    		<version>12.10.0.jre8</version>
		</dependency>
		-->
		
		<!-- Informix
		<dependency>
			<groupId>com.ibm.informix</groupId>
			<artifactId>jdbc</artifactId>
			<version>15.0.0.1.1</version>
		</dependency>
		-->
		
		<!-- Db2
		<dependency>
			<groupId>com.ibm.db2</groupId>
			<artifactId>jcc</artifactId>
			<version>12.1.0.0</version>
		</dependency>
		-->
		
		<!-- Firebird/Jaybird
		<dependency>
			<groupId>org.firebirdsql.jdbc</groupId>
			<artifactId>jaybird</artifactId>
			<version>5.0.7.java8</version>
		</dependency>
		-->
		
	</dependencies>

	<build>
		<finalName>inventorymanagementapplication</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.openxava</groupId>
									<artifactId>openxava</artifactId>
									<version>${openxava.version}</version>
									<outputDirectory>src/main/resources</outputDirectory>
									<includes>xava/dtds/*</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.2</version>
				<configuration>
					<packagingExcludes>WEB-INF/lib/ecj-3*.jar,
						WEB-INF/lib/fontbox-*.jar,
						WEB-INF/lib/htmlunit-*.jar,
						WEB-INF/lib/httpclient-*.jar,
						WEB-INF/lib/httpcore-*.jar,
						WEB-INF/lib/httpmime-*.jar,
						WEB-INF/lib/jetty-*.jar,
						WEB-INF/lib/junit-*.jar,
						WEB-INF/lib/neko-htmlunit-*.jar,
						WEB-INF/lib/pdfbox-*.jar,
						WEB-INF/lib/serializer-*.jar,
						WEB-INF/lib/tomcat-*.jar,
						WEB-INF/lib/websocket-*.jar,
						WEB-INF/lib/xalan-*.jar,
						WEB-INF/lib/xercesImpl-*.jar,
						WEB-INF/lib/xml-apis-*.jar</packagingExcludes>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.5</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<configLocation>google_checks.xml</configLocation>
					<failOnViolation>true</failOnViolation>
					<consoleOutput>true</consoleOutput>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.guava</groupId>
						<artifactId>guava</artifactId>
						<version>30.1.1-jre</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
